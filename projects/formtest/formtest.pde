boolean isRotating = false;
boolean isRotatingX = false;
boolean isRotatingY = false;
boolean isRotatingZ = true;
boolean alternateColors = false;
float incx = 0.;
float incy = 0.;
float incz = 0.;
float middlex;
float middley;
float middlez;
float rotX = 0.;
float rotY = 0.;
float rotZ = 0.;
void setup() {
	size(800, 600, OPENGL);
	fill(184, 235, 184);
}
void drawCircle(float _x, float _y, float _radius, float _z) {
_radius = _radius / 2;
noFill();
bezier(0 + _x, _radius/2 + _y, _z, 0 + _x, _radius/2 +_y, _z, 0+_x, 0+_y, _z, _radius/2+_x, 0+_y, _z);
bezier(_radius/2 + _x, 0 + _y, _z, _radius/2 + _x, 0 + _y, _z, _radius + _x, 0 + _y, _z, _radius + _x, _radius/2 + _y, _z);
bezier(_radius + _x, _radius/2 + _y, _z, _radius + _x, _radius/2 + _y, _z, _radius + _x, _radius + _y, _z, _radius/2 + _x, _radius + _y, _z);
bezier(_radius/2 + _x, _radius + _y, _z, _radius/2 + _x, _radius + _y, _z, 0 + _x, _radius + _y, _z, 0 + _x, _radius/2 + _y, _z);
}

void draw() {
	lights();
	if (alternateColors) {
		background(120);
	} else {
		background(255);
	}
	camera(0.0, middlez, 220.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);
	if (mousePressed) {
	// do nothing
	} else {
	rotY = (PI*2)*((mouseX/(float)width)+incx);
	rotX = (PI*2)*((mouseY/(float)height)+incy);
	rotZ = (PI*2)*incz;
	}
	translate(middlex, middley, 0.);
	rotateX(rotX);
	rotateY(rotY);
	rotateZ(rotZ);
	translate(-middlex, -middley, -0.);
	
	if (isRotating) {
	if (isRotatingX) { incx += 0.0003; };
		if (incx >= 1.0) {
			incx = 0.;
		}
	if (isRotatingY) { incy += 0.0001; };
		if (incy >= 1.0) {
			incy = 0.;
		}
	if (isRotatingZ) { incz += 0.00045; };
		if (incz >= 1.0) {
			incz = 0.;
		}
	}
	if (alternateColors) {
		stroke(120, 0, 0);
	} else {
		stroke(40, 120, 40);
	}
	line(0, 0, 0, 100, 0, 0);
	line(0, 0, 0, 0, 100, 0);
	line(0, 0, 0, 0, 0, 100);
	if (alternateColors) {
		stroke(0);
	} else {
		stroke(0);
	}
stroke(120, 120, 200);
line(0.000000000000, 0.000000000000, 30.000000000000, 0.000000000000, 0.000000000000, 0.000000000000);
line(0.000000000000, 0.000000000000, 30.000000000000, 0.000000000000, 0.000000000000, 30.000000000000);
line(0.000000000000, 0.000000000000, 30.000000000000, 10.000000000000, 10.000000000000, 30.000000000000);
line(10.000000000000, 10.000000000000, 30.000000000000, 0.000000000000, 10.000000000000, 30.000000000000);
line(0.000000000000, 10.000000000000, 30.000000000000, 0.000000000000, 0.000000000000, 30.000000000000);
line(0.000000000000, 0.000000000000, 30.000000000000, 50.000000000000, 50.000000000000, 30.000000000000);
line(50.000000000000, 50.000000000000, 0.000000000000, 50.000000000000, 50.000000000000, 30.000000000000);
stroke(0, 0, 0);
line(50.000000000000, 50.000000000000, 0.000000000000, 50.000000000000, 50.000000000000, 0.000000000000);
line(50.000000000000, 50.000000000000, 0.000000000000, 60.000000000000, 60.000000000000, 0.000000000000);
line(60.000000000000, 60.000000000000, 0.000000000000, 50.000000000000, 60.000000000000, 0.000000000000);
line(50.000000000000, 60.000000000000, 0.000000000000, 50.000000000000, 50.000000000000, 0.000000000000);
stroke(120, 120, 200);
line(50.000000000000, 50.000000000000, 30.000000000000, 50.000000000000, 50.000000000000, 0.000000000000);
line(50.000000000000, 50.000000000000, 30.000000000000, 50.000000000000, 100.000000000000, 30.000000000000);
line(50.000000000000, 100.000000000000, 0.000000000000, 50.000000000000, 100.000000000000, 30.000000000000);
stroke(0, 0, 0);
line(50.000000000000, 100.000000000000, 0.000000000000, 50.000000000000, 100.000000000000, 0.000000000000);
line(50.000000000000, 100.000000000000, 0.000000000000, 85.355339059327, 85.355339059327, 0.000000000000);
line(85.355339059327, 85.355339059327, 0.000000000000, 100.000000000000, 50.000000000000, 0.000000000000);
line(100.000000000000, 50.000000000000, 0.000000000000, 85.355339059327, 14.644660940673, 0.000000000000);
line(85.355339059327, 14.644660940673, 0.000000000000, 50.000000000000, 0.000000000000, 0.000000000000);
line(50.000000000000, 0.000000000000, 0.000000000000, 14.644660940673, 14.644660940673, 0.000000000000);
line(14.644660940673, 14.644660940673, 0.000000000000, 0.000000000000, 50.000000000000, 0.000000000000);
line(0.000000000000, 50.000000000000, 0.000000000000, 14.644660940673, 85.355339059327, 0.000000000000);
line(14.644660940673, 85.355339059327, 0.000000000000, 50.000000000000, 100.000000000000, 0.000000000000);
stroke(120, 120, 200);
line(50.000000000000, 100.000000000000, 30.000000000000, 50.000000000000, 100.000000000000, 0.000000000000);
line(50.000000000000, 100.000000000000, 30.000000000000, 50.000000000000, 110.000000000000, 30.000000000000);
line(50.000000000000, 110.000000000000, 0.000000000000, 50.000000000000, 110.000000000000, 30.000000000000);
stroke(0, 0, 0);
line(50.000000000000, 110.000000000000, 0.000000000000, 50.000000000000, 110.000000000000, 0.000000000000);
line(50.000000000000, 110.000000000000, 0.000000000000, 57.831571533203, 109.486691682429, 0.000000000000);
line(57.831571533203, 109.486691682429, 0.000000000000, 65.529142706151, 107.955549577344, 0.000000000000);
line(65.529142706151, 107.955549577344, 0.000000000000, 72.961005941905, 105.432771950677, 0.000000000000);
line(72.961005941905, 105.432771950677, 0.000000000000, 80.000000000000, 101.961524227066, 0.000000000000);
line(80.000000000000, 101.961524227066, 0.000000000000, 86.525685740523, 97.601200417474, 0.000000000000);
line(86.525685740523, 97.601200417474, 0.000000000000, 92.426406871193, 92.426406871193, 0.000000000000);
line(92.426406871193, 92.426406871193, 0.000000000000, 97.601200417474, 86.525685740523, 0.000000000000);
line(97.601200417474, 86.525685740523, 0.000000000000, 101.961524227066, 80.000000000000, 0.000000000000);
line(101.961524227066, 80.000000000000, 0.000000000000, 105.432771950677, 72.961005941905, 0.000000000000);
line(105.432771950677, 72.961005941905, 0.000000000000, 107.955549577344, 65.529142706151, 0.000000000000);
line(107.955549577344, 65.529142706151, 0.000000000000, 109.486691682429, 57.831571533203, 0.000000000000);
line(109.486691682429, 57.831571533203, 0.000000000000, 110.000000000000, 50.000000000000, 0.000000000000);
line(110.000000000000, 50.000000000000, 0.000000000000, 109.486691682429, 42.168428466797, 0.000000000000);
line(109.486691682429, 42.168428466797, 0.000000000000, 107.955549577344, 34.470857293849, 0.000000000000);
line(107.955549577344, 34.470857293849, 0.000000000000, 105.432771950677, 27.038994058095, 0.000000000000);
line(105.432771950677, 27.038994058095, 0.000000000000, 101.961524227066, 20.000000000000, 0.000000000000);
line(101.961524227066, 20.000000000000, 0.000000000000, 97.601200417474, 13.474314259477, 0.000000000000);
line(97.601200417474, 13.474314259477, 0.000000000000, 92.426406871193, 7.573593128807, 0.000000000000);
line(92.426406871193, 7.573593128807, 0.000000000000, 86.525685740523, 2.398799582526, 0.000000000000);
line(86.525685740523, 2.398799582526, 0.000000000000, 80.000000000000, -1.961524227066, 0.000000000000);
line(80.000000000000, -1.961524227066, 0.000000000000, 72.961005941905, -5.432771950677, 0.000000000000);
line(72.961005941905, -5.432771950677, 0.000000000000, 65.529142706151, -7.955549577344, 0.000000000000);
line(65.529142706151, -7.955549577344, 0.000000000000, 57.831571533203, -9.486691682429, 0.000000000000);
line(57.831571533203, -9.486691682429, 0.000000000000, 50.000000000000, -10.000000000000, 0.000000000000);
line(50.000000000000, -10.000000000000, 0.000000000000, 42.168428466797, -9.486691682429, 0.000000000000);
line(42.168428466797, -9.486691682429, 0.000000000000, 34.470857293849, -7.955549577344, 0.000000000000);
line(34.470857293849, -7.955549577344, 0.000000000000, 27.038994058095, -5.432771950677, 0.000000000000);
line(27.038994058095, -5.432771950677, 0.000000000000, 20.000000000000, -1.961524227066, 0.000000000000);
line(20.000000000000, -1.961524227066, 0.000000000000, 13.474314259477, 2.398799582526, 0.000000000000);
line(13.474314259477, 2.398799582526, 0.000000000000, 7.573593128807, 7.573593128807, 0.000000000000);
line(7.573593128807, 7.573593128807, 0.000000000000, 2.398799582526, 13.474314259477, 0.000000000000);
line(2.398799582526, 13.474314259477, 0.000000000000, -1.961524227066, 20.000000000000, 0.000000000000);
line(-1.961524227066, 20.000000000000, 0.000000000000, -5.432771950677, 27.038994058095, 0.000000000000);
line(-5.432771950677, 27.038994058095, 0.000000000000, -7.955549577344, 34.470857293849, 0.000000000000);
line(-7.955549577344, 34.470857293849, 0.000000000000, -9.486691682429, 42.168428466797, 0.000000000000);
line(-9.486691682429, 42.168428466797, 0.000000000000, -10.000000000000, 50.000000000000, 0.000000000000);
line(-10.000000000000, 50.000000000000, 0.000000000000, -9.486691682429, 57.831571533203, 0.000000000000);
line(-9.486691682429, 57.831571533203, 0.000000000000, -7.955549577344, 65.529142706151, 0.000000000000);
line(-7.955549577344, 65.529142706151, 0.000000000000, -5.432771950677, 72.961005941905, 0.000000000000);
line(-5.432771950677, 72.961005941905, 0.000000000000, -1.961524227066, 80.000000000000, 0.000000000000);
line(-1.961524227066, 80.000000000000, 0.000000000000, 2.398799582526, 86.525685740523, 0.000000000000);
line(2.398799582526, 86.525685740523, 0.000000000000, 7.573593128807, 92.426406871193, 0.000000000000);
line(7.573593128807, 92.426406871193, 0.000000000000, 13.474314259477, 97.601200417474, 0.000000000000);
line(13.474314259477, 97.601200417474, 0.000000000000, 20.000000000000, 101.961524227066, 0.000000000000);
line(20.000000000000, 101.961524227066, 0.000000000000, 27.038994058095, 105.432771950677, 0.000000000000);
line(27.038994058095, 105.432771950677, 0.000000000000, 34.470857293849, 107.955549577344, 0.000000000000);
line(34.470857293849, 107.955549577344, 0.000000000000, 42.168428466797, 109.486691682429, 0.000000000000);
line(42.168428466797, 109.486691682429, 0.000000000000, 50.000000000000, 110.000000000000, 0.000000000000);
	noStroke();
	if (alternateColors) {
		fill(180, 180, 180, 120);
	} else {
		fill(120, 120, 120, 180);
	}
	translate(0,0,-50);
	box(200,200,100);
	translate(0,0,50);
}
void mouseDragged() {
	middlex += mouseX - pmouseX;
	middley += mouseY - pmouseY;
}
void keyPressed() {
	if (keyCode == UP) {
		middlez += 15.0;
	}
	if (keyCode == DOWN) {
		middlez -= 15.0;
	}
	if (key == 'r' || key == 'R') {
		if (isRotating) {
			isRotating = false;
		} else {
			isRotating = true;
			if (!isRotatingX && !isRotatingY && !isRotatingZ) { isRotatingZ = true; }
		}
	}
	if (key == 'c' || key == 'C') {
		if (alternateColors) {
			alternateColors = false;
		} else {
			alternateColors = true;
		}
	}
	if (key == 'x' || key == 'X') {
		if (isRotatingX) {
			isRotatingX = false;
		} else {
			isRotatingX = true;
		}
	}
	if (key == 'y' || key == 'Y') {
		if (isRotatingY) {
			isRotatingY = false;
		} else {
			isRotatingY = true;
		}
	}
	if (key == 'z' || key == 'Z') {
		if (isRotatingZ) {
			isRotatingZ = false;
		} else {
			isRotatingZ = true;
		}
	}
}
